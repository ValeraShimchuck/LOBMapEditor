name: Build and Release Desktop Applications

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with 'v'

env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.8'  # Use a Gradle version compatible with Java 21

jobs:
  build-and-package:
    name: Build and Package - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            formats: "Deb,Rpm,AppImage"
          - os: windows-latest
            formats: "Msi,Exe"
          - os: macos-latest
            formats: "Dmg"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4



      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Make gradlew executable # <-- Add this step
        run: chmod +x ./gradlew

      - name: Build Uber JAR for Current OS
        run: ./gradlew packageUberJarForCurrentOS --no-daemon



      - name: Build Native Distributions
        run: ./gradlew packageDistributionForCurrentOS --no-daemon
        env:
          NATIVE_FORMATS: ${{ matrix.formats }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desktop-packages-${{ matrix.os }}
          path: |
            composeApp/build/compose/binaries/**/*.jar
            composeApp/build/compose/binaries/**/*.${{ matrix.formats == 'Msi,Exe' && 'msi' || matrix.formats == 'Deb,Rpm,AppImage' && 'deb' || 'dmg' }}
            composeApp/build/compose/binaries/**/*.${{ matrix.formats == 'Msi,Exe' && 'exe' || matrix.formats == 'Deb,Rpm,AppImage' && 'rpm' || '' }}
            composeApp/build/compose/binaries/**/*.${{ matrix.formats == 'Deb,Rpm,AppImage' && 'AppImage' || '' }}
          retention-days: 7

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-package
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: find artifacts -type f

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true